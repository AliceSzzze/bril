# Max subarray problem

@max(n: int, m: int) : int {
  condi: bool = lt n m;
  br condi .less .biggereq;
.less:
  ret m;
.biggereq:
  ret n;
}

# ARGS: 1 2 3 4 5 -10 -10 50 50 -12
@main(size: int, array: ptr<int>) {    
    sum: int = const 0;
    max_sum: int = const 0;

    one: int = const 1;
    zero: int = const 0;
    i: int = const 0;
  .loop:
    condi: bool = lt i size;
    br condi .bodyi .done;
  .bodyi:

    # array[i]
    loc: ptr<int> = ptradd array i;
    elem: int = load loc;

    # sum = max(0, sum + array[i]);
    sum_incr: int = add sum elem;
    sum: int = call @max zero sum_incr;
   
    # max_sum = max(max_sum, sum);
    max_sum: int = call @max max_sum sum;

    # incr i
    i: int = add i one;
    jmp .loop;
  .done:
    print max_sum;
}
